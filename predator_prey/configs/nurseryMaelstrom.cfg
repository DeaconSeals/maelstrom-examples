[MAELSTROM]
islands = {'Thunderdome': 'ISLAND', 'Prey Nursery': 'PREY_NURSERY', 'Predator Nursery': 'PREDATOR_NURSERY'}
migrationEdges = 	[
						{
							'source': ('Thunderdome', 'predators'),
							'destination': ('Predator Nursery', 'predators'),
							'period': 10,
							'size': 4,
							'method': 'best'
						},
						{
							'source': ('Thunderdome', 'prey'),
							'destination': ('Predator Nursery', 'prey'),
							'period': 10,
							'size': 4,
							'method': 'normal'
						},
						{
							'source': ('Thunderdome', 'predators'),
							'destination': ('Prey Nursery', 'predators'),
							'period': 10,
							'size': 4,
							'method': 'normal'
						},
						{
							'source': ('Thunderdome', 'prey'),
							'destination': ('Prey Nursery', 'prey'),
							'period': 10,
							'size': 4,
							'method': 'best'
						},
						{
							'source': ('Predator Nursery', 'predators'),
							'destination': ('Thunderdome', 'predators'),
							'period': 10,
							'size': 4,
							'method': 'best'
						},
						{
							'source': ('Prey Nursery', 'prey'),
							'destination': ('Thunderdome', 'prey'),
							'period': 10,
							'size': 4,
							'method': 'best'
						}
					]
evaluations = 500000

[GENERAL]
render = False
default_test = False
analysis = False
logpath = logs/predator075
experiment_name = nurseryMaelstrom
runs = 30
find_local_champions = True
final_champions = 5


pop_size = 200
num_children = 100
parent_selection = kTournament
k_parent = 10
mutation = 0.05
survival_strategy = plus
survival_selection = truncation
	

depth_limit = 5
hard_limit = 20
depth_min = 1
output_type = ANGLE

[ISLAND]
populations = {'predators': 'predators', 'prey': 'prey'}
evaluation_function = sampleEvaluations
evaluation_kwargs = {"samples": 10, "world_kwargs":{"predator_move_speed": 0.075, "prey_move_speed": 0.10, "agent_radius": 0.10, "time_limit":200}}
champions_per_generation = 5

[PREDATOR_NURSERY]
populations = {'predators': 'predators', 'prey': 'staticPrey'}
evaluation_function = completeEvaluations
evaluation_kwargs = {"world_kwargs":{"predator_move_speed": 0.075, "prey_move_speed": 0.10, "agent_radius": 0.10, "time_limit":200}}
champions_per_generation = 5

[PREY_NURSERY]
populations = {'predators': 'staticPredators', 'prey': 'prey'}
evaluation_function = completeEvaluations
evaluation_kwargs = {"world_kwargs":{"predator_move_speed": 0.075, "prey_move_speed": 0.10, "agent_radius": 0.10, "time_limit":200}}
champions_per_generation = 5

[predators]
roles = (GENERAL, PREDATOR)
output_type = ${GENERAL:output_type}
depth_limit = ${GENERAL:depth_limit}
hard_limit = ${GENERAL:hard_limit}
depth_min = ${GENERAL:depth_min}
pop_size =${GENERAL:pop_size}
num_children = ${GENERAL:num_children}
parent_selection = ${GENERAL:parent_selection}
k_parent = ${GENERAL:k_parent}
mutation = ${GENERAL:mutation}
survival_strategy = ${GENERAL:survival_strategy}
survival_selection = ${GENERAL:survival_selection}

[staticPredators]
roles = (GENERAL, PREDATOR)
output_type = ${GENERAL:output_type}
depth_limit = ${GENERAL:depth_limit}
hard_limit = ${GENERAL:hard_limit}
depth_min = ${GENERAL:depth_min}
pop_size = 5
num_children = 0
parent_selection = ${GENERAL:parent_selection}
k_parent = ${GENERAL:k_parent}
mutation = ${GENERAL:mutation}
survival_strategy = ${GENERAL:survival_strategy}
survival_selection = ${GENERAL:survival_selection}

[prey]
roles = (GENERAL, PREY)
output_type = ${GENERAL:output_type}
depth_limit = ${GENERAL:depth_limit}
hard_limit = ${GENERAL:hard_limit}
depth_min = ${GENERAL:depth_min}
pop_size =${GENERAL:pop_size}
num_children = ${GENERAL:num_children}
parent_selection = ${GENERAL:parent_selection}
k_parent = ${GENERAL:k_parent}
mutation = ${GENERAL:mutation}
survival_strategy = ${GENERAL:survival_strategy}
survival_selection = ${GENERAL:survival_selection}

[staticPrey]
roles = (GENERAL, PREY)
output_type = ${GENERAL:output_type}
depth_limit = ${GENERAL:depth_limit}
hard_limit = ${GENERAL:hard_limit}
depth_min = ${GENERAL:depth_min}
pop_size = 5
num_children = 0
parent_selection = ${GENERAL:parent_selection}
k_parent = ${GENERAL:k_parent}
mutation = ${GENERAL:mutation}
survival_strategy = ${GENERAL:survival_strategy}
survival_selection = ${GENERAL:survival_selection}
